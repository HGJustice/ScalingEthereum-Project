// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class carAdded extends ethereum.Event {
  get params(): carAdded__Params {
    return new carAdded__Params(this);
  }
}

export class carAdded__Params {
  _event: carAdded;

  constructor(event: carAdded) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get carMake(): string {
    return this._event.parameters[1].value.toString();
  }

  get model(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class userCreated extends ethereum.Event {
  get params(): userCreated__Params {
    return new userCreated__Params(this);
  }
}

export class userCreated__Params {
  _event: userCreated;

  constructor(event: userCreated) {
    this._event = event;
  }

  get userAddy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get username(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UserManagement__getCarResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get countryOrigin(): string {
    return this[1].toString();
  }

  get registrationPlate(): string {
    return this[2].toString();
  }

  get carMake(): string {
    return this[3].toString();
  }

  get model(): string {
    return this[4].toString();
  }

  get typeOfCar(): string {
    return this[5].toString();
  }

  get color(): string {
    return this[6].toString();
  }

  get year(): BigInt {
    return this[7].toBigInt();
  }

  get numLifts(): BigInt {
    return this[8].toBigInt();
  }
}

export class UserManagement__getUserResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get username(): string {
    return this[1].toString();
  }

  get rating(): BigInt {
    return this[2].toBigInt();
  }

  get numRides(): BigInt {
    return this[3].toBigInt();
  }

  get userCreated(): boolean {
    return this[4].toBoolean();
  }

  get hasCar(): boolean {
    return this[5].toBoolean();
  }
}

export class UserManagement extends ethereum.SmartContract {
  static bind(address: Address): UserManagement {
    return new UserManagement("UserManagement", address);
  }

  currentCarID(): BigInt {
    let result = super.call("currentCarID", "currentCarID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentCarID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("currentCarID", "currentCarID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentUserID(): BigInt {
    let result = super.call("currentUserID", "currentUserID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentUserID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentUserID",
      "currentUserID():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCar(useraddy: Address): UserManagement__getCarResultValue0Struct {
    let result = super.call(
      "getCar",
      "getCar(address):((uint256,string,string,string,string,string,string,uint256,uint256))",
      [ethereum.Value.fromAddress(useraddy)],
    );

    return changetype<UserManagement__getCarResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getCar(
    useraddy: Address,
  ): ethereum.CallResult<UserManagement__getCarResultValue0Struct> {
    let result = super.tryCall(
      "getCar",
      "getCar(address):((uint256,string,string,string,string,string,string,uint256,uint256))",
      [ethereum.Value.fromAddress(useraddy)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UserManagement__getCarResultValue0Struct>(value[0].toTuple()),
    );
  }

  getUser(useraddy: Address): UserManagement__getUserResultValue0Struct {
    let result = super.call(
      "getUser",
      "getUser(address):((uint256,string,uint256,uint256,bool,bool))",
      [ethereum.Value.fromAddress(useraddy)],
    );

    return changetype<UserManagement__getUserResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getUser(
    useraddy: Address,
  ): ethereum.CallResult<UserManagement__getUserResultValue0Struct> {
    let result = super.tryCall(
      "getUser",
      "getUser(address):((uint256,string,uint256,uint256,bool,bool))",
      [ethereum.Value.fromAddress(useraddy)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UserManagement__getUserResultValue0Struct>(value[0].toTuple()),
    );
  }
}

export class AddCarToUserCall extends ethereum.Call {
  get inputs(): AddCarToUserCall__Inputs {
    return new AddCarToUserCall__Inputs(this);
  }

  get outputs(): AddCarToUserCall__Outputs {
    return new AddCarToUserCall__Outputs(this);
  }
}

export class AddCarToUserCall__Inputs {
  _call: AddCarToUserCall;

  constructor(call: AddCarToUserCall) {
    this._call = call;
  }

  get _countryOrigin(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _regPlate(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _carMake(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _model(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _typeOfCar(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _color(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _year(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class AddCarToUserCall__Outputs {
  _call: AddCarToUserCall;

  constructor(call: AddCarToUserCall) {
    this._call = call;
  }
}

export class RegisterUserCall extends ethereum.Call {
  get inputs(): RegisterUserCall__Inputs {
    return new RegisterUserCall__Inputs(this);
  }

  get outputs(): RegisterUserCall__Outputs {
    return new RegisterUserCall__Outputs(this);
  }
}

export class RegisterUserCall__Inputs {
  _call: RegisterUserCall;

  constructor(call: RegisterUserCall) {
    this._call = call;
  }

  get userName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class RegisterUserCall__Outputs {
  _call: RegisterUserCall;

  constructor(call: RegisterUserCall) {
    this._call = call;
  }
}
